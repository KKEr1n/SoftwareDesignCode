plugins {
    id 'java-library'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}
//
//sourceSets.main.java.srcDirs = ['src']
//sourceSets.test.java.srcDirs = ['test']

javafx {
    version = '11'
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing', 'javafx.media', 'javafx.graphics']
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    useJUnit()
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

// uncomment the desired module to test/run
//mainClassName = "ca.mcgill.cs.swdesign.m1.Client"
//mainClassName = "ca.mcgill.cs.swdesign.m0.demo.Welcome"
//mainClassName = "ca.mcgill.cs.swdesign.m2.Game"
//mainClassName = "ca.mcgill.cs.swdesign.m5.icon.BridgeDealer"
//mainClassName = "ca.mcgill.cs.swdesign.m6.LuckyNumber"
//mainClassName = "ca.uvic.seng330.m9.CCounter"
mainClassName = "ca.uvic.seng330.m10.SerializeCarTester"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}



dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // implementation 'org.json:json:20180813','org.slf4j:slf4j-simple:1.7.25'

    testImplementation (
            'junit:junit:4.11',
            // "org.mockito:mockito-core:2.+"
    )

    testRuntimeOnly(
            'junit:junit:4.11'
    )
    implementation 'junit:junit:4.12'
}
